<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PullToRefresh">
        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color"/>

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color"/>

        <!-- A drawable to use as the background of the Header Loading Views. Overrides value set in ptrHeaderBackground. -->
        <attr name="ptrHeaderBackgroundStart" format="reference|color"/>

        <!-- A drawable to use as the background of the Footer Loading Views. Overrides value set in ptrHeaderBackground. -->
        <attr name="ptrHeaderBackgroundEnd" format="reference|color"/>

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color"/>

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color"/>

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference"/>

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextAppearance" format="reference"/>

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0"/>
            <flag name="pullFromStart" value="0x1"/>
            <flag name="pullFromEnd" value="0x2"/>
            <flag name="both" value="0x3"/>
            <flag name="manualOnly" value="0x4"/>

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1"/>
            <flag name="pullUpFromBottom" value="0x2"/>
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean"/>

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference"/>

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference"/>

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference"/>

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean"/>

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0"/>
            <flag name="flip" value="0x1"/>
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean"/>

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean"/>

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean"/>

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color"/>
        <attr name="ptrDrawableTop" format="reference"/>
        <attr name="ptrDrawableBottom" format="reference"/>
    </declare-styleable>

    <!-- BasicImageView -->
    <declare-styleable name="BasicImageView">
        <attr name="cache_type">
            <enum name="Temp" value="0"/>
            <enum name="StickerList" value="1"/>
            <enum name="FAV" value="2"/>
        </attr>
        <attr name="cache_vitality">
            <enum name="Volatile" value="0"/>
            <enum name="Default" value="1"/>
            <enum name="Permanent" value="2"/>
        </attr>
        <attr name="empty" format="reference"/>
        <attr name="image_fade_in" format="boolean"/>
        <attr name="scaleTypeEx">
            <enum name="topCrop" value="0"/>
            <enum name="bottomCrop" value="1"/>
            <enum name="leftCrop" value="2"/>
            <enum name="rightCrop" value="3"/>
            <enum name="topLeftCrop" value="4"/>
            <enum name="bottomRightCrop" value="5"/>
        </attr>
    </declare-styleable>

    <!-- 输入框 -->
    <declare-styleable name="genericInputBox">

        <!-- 输入内容名称 -->
        <attr name="contentName" format="string|reference"/>
        <!-- 名称字体大小 -->
        <attr name="contentNameTextSize" format="dimension"/>
        <!-- 名称描述框宽度 -->
        <attr name="contentNameWidth" format="dimension"/>
        <!-- 输入内容字体大小 -->
        <attr name="inputTextSize" format="dimension"/>
        <!-- 输入内容颜色 -->
        <attr name="inputTextColor" format="color|reference"/>
        <!-- 输入框提示内容 -->
        <attr name="inputHint" format="string|reference"/>
        <!-- 提示内容颜色 -->
        <attr name="inputHintTextColor" format="color|reference"/>
        <!-- 输入框内容对齐方式 -->
        <attr name="inputGravity">
            <flag name="Left" value="0x00000003"/>
            <flag name="Right" value="0x00000005"/>
        </attr>
        <!-- 输入内容最大长度 -->
        <attr name="maxLength" format="integer"/>
        <!-- 输入内容类型 普通/数字/小树数字/密码 -->
        <attr name="inputType">
            <flag name="textNormal" value="0x1"/>
            <flag name="textNumber" value="0x2"/>
            <flag name="textDecimal" value="0x2002"/>
            <flag name="textPassword" value="0x81"/>
            <flag name="textNull" value="0x0"/>
        </attr>
        <!-- 是否显示清除按钮 -->
        <attr name="showClearBtn" format="boolean"/>
        <!-- 控件尾部的ImageBut mton背景 -->
        <attr name="extraImgButtonBg" format="color|reference"/>
        <!-- 位数分隔 -->
        <attr name="separateList" format="string"/>
    </declare-styleable>

    <!-- 分页标签 -->
    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color"/>
        <attr name="pstsUnderlineColor" format="color"/>
        <attr name="pstsDividerColor" format="color"/>
        <attr name="pstsCheckedTextColor" format="reference"/>
        <attr name="pstsUncheckedTextColor" format="reference"/>
        <attr name="pstsIndicatorHeight" format="dimension"/>
        <attr name="pstsUnderlineHeight" format="dimension"/>
        <attr name="pstsDividerPadding" format="dimension"/>
        <attr name="pstsTabPaddingLeftRight" format="dimension"/>
        <attr name="pstsScrollOffset" format="dimension"/>
        <attr name="pstsTabBackground" format="reference"/>
        <attr name="pstsShouldExpand" format="boolean"/>
        <attr name="pstsTextAllCaps" format="boolean"/>
    </declare-styleable>

    <!-- 左右文本 -->
    <declare-styleable name="TwoTextView">

        <!-- 左边文本内容 -->
        <attr name="ttLeftText" format="string|reference"/>
        <!-- 右边文本内容 -->
        <attr name="ttRightText" format="string|reference"/>
        <!-- 左边文本字体大小 -->
        <attr name="ttLeftTextSize" format="dimension"/>
        <!-- 右边文本字体大小 -->
        <attr name="ttRightTextSize" format="dimension"/>
        <!-- 左边文本颜色 -->
        <attr name="ttLeftTextColor" format="reference"/>
        <!-- 右边文本颜色 -->
        <attr name="ttRightTextColor" format="reference"/>
    </declare-styleable>

</resources>